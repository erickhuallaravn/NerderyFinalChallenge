# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProductFile {
  id: ID!
  productVariationId: String!
  fileExtension: String!
  url: String!
  altText: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  productVariation: ProductVariation!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Option {
  id: ID!
  name: String!
  code: String!
  values: OptionValue!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type OptionValue {
  id: ID!
  name: String!
  code: String!
  optionId: String!
  option: Option!
  variations: Feature!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
  statusUpdatedAt: DateTime!
}

type Feature {
  id: ID!
  optionValueId: String!
  productVariationId: String!
  optionValue: OptionValue!
  productVariation: ProductVariation!
}

type ProductVariation {
  id: ID!
  name: String!
  price: Float!
  currencyCode: String!
  availableStock: Float!
  product: Product!
  createdAt: DateTime!
  updatedAt: DateTime
  status: String!
  statusUpdatedAt: DateTime!
  productFiles: [ProductFile!]!
  features: [Feature!]!
}

type Product {
  id: ID!
  name: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
  statusUpdatedAt: DateTime!
  variations: [ProductVariation!]!
}

type ShopCartItemDiscount {
  id: ID!
  requiredAmount: Int!
  discountPercentage: Float
  bonusQuantity: Float
  createdAt: DateTime!
  updatedAt: DateTime
}

type ShopCartItem {
  id: ID!
  shoppingCartHeaderId: String!
  productVariationId: String!
  productName: String!
  quantity: Int!
  subtotal: Float!
  createdAt: DateTime!
  updatedAt: DateTime
  itemDiscounts: [ShopCartItemDiscount!]!
}

type PromotionalDiscount {
  id: ID!
  name: String!
  productVariationId: String!
  discountType: String!
  requiredAmount: Float!
  bonusQuantity: Float
  discountPercentage: Float
  validSince: DateTime
  validUntil: DateTime
  availableStock: Float
  createdAt: DateTime!
  updatedAt: DateTime
  status: String!
  statusUpdatedAt: DateTime!
}

type Customer {
  id: ID!
  firstName: String!
  lastName: String!
  address: String!
  phoneNumber: String!
  birthday: DateTime!
}

type OrderItemDiscount {
  id: ID!
  orderDetailId: String!
  promotionalDiscountId: String!
  productName: String!
  requiredAmount: Int!
  discountPercentage: Float!
  bonusQuantity: Int!
  customer: Customer!
}

type OrderItem {
  id: ID!
  productName: String!
  quantity: Int!
  subtotal: Float!
  createdAt: DateTime!
  updatedAt: DateTime
  customer: Customer!
  itemDiscounts: [OrderItemDiscount!]!
}

type OrderHeaderStatusHistory {
  id: ID!
  notes: String
  status: String!
  statusUpdatedAt: DateTime!
}

type OrderHeader {
  id: ID!
  customer: Customer!
  subtotal: Float!
  orderItems: [OrderItem!]!
  statusHistory: [OrderHeaderStatusHistory!]!
  createdAt: DateTime!
  updatedAt: DateTime
}

type Query {
  getLikedProducts: [Product!]!
  getProducts(input: SearchPaginateProductInput): [Product!]!
  getProductById(product_id: ID!): Product!
  getMyCartItems: [ShopCartItem!]!
  getPromotionsByProduct(productVariationId: String!): [PromotionalDiscount!]!
  getOrders: [OrderHeader!]!
  getMyOrders: [OrderHeader!]!
  getItemsByOrder(itemId: String!): OrderItem!
  getOrderItem(itemId: String!): OrderItem!
}

input SearchPaginateProductInput {
  search: String
  limit: Int
  offset: Int
}

type Mutation {
  createProduct(input: CreateProductInput!): Product!
  updateProduct(input: UpdateProductInput!): Product!
  deleteProduct(product_id: ID!): Boolean!
  createProductVariation(input: CreateProductVariationInput!): ProductVariation!
  updateProductVariation(input: UpdateProductVariationInput!): ProductVariation!
  deleteProductVariation(productVariationId: ID!): Boolean!
  markVariationAsLiked(productVariationId: ID!): Boolean!
  uploadProductFile(input: UploadProductFileInput!): ProductFile!
  deleteProductFile(productFileId: String!): Boolean!
  addFeature(input: AddVariationFeatureInput!): Feature!
  deleteFeature(featureId: ID!): Boolean!
  addOrUpdateCartItem(input: AddToShopCartInput!): Boolean!
  emptyCart: Boolean!
  createPromotionalDiscount(input: CreatePromotionalDiscountInput!): PromotionalDiscount!
  deletePromotionalDiscount(id: String!): Boolean!
  createOrder(notes: String): OrderHeader!
  updateOrder(orderId: String!, input: UpdateOrderHeaderInput!): OrderHeader!
  anulateOrder(orderId: String!): OrderHeader!
  updateOrderItem(itemId: String!, input: UpdateOrderItemInput!): OrderItem!
  deleteOrderItem(itemId: String!): OrderItem!
}

input CreateProductInput {
  name: String!
  description: String
}

input UpdateProductInput {
  productId: ID!
  name: String
  description: String
  status: String
}

input CreateProductVariationInput {
  productId: ID!
  name: String!
  price: Float!
  currencyCode: String!
  availableStock: Float!
  features: [UpdateVariationFeatureInput!]!
}

input UpdateVariationFeatureInput {
  optionCode: String!
  valueCode: String!
}

input UpdateProductVariationInput {
  productVariationId: ID!
  name: String
  price: Float
  currencyCode: String
  availableStock: Int
  features: [UpdateVariationFeatureInput!]
  status: String
}

input UploadProductFileInput {
  file: Upload!
  productVariationId: String!
  altText: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input AddVariationFeatureInput {
  optionCode: String!
  valueCode: String!
  productVariationId: String!
}

input AddToShopCartInput {
  productVariationId: String!
  quantity: Int!
}

input CreatePromotionalDiscountInput {
  name: String!
  productVariationId: String!
  discountType: String!
  requiredAmount: Float!
  bonusQuantity: Float
  discountPercentage: Float
  validUntil: DateTime
  availableStock: Float
}

input UpdateOrderHeaderInput {
  customerId: String
  subtotal: Float
  notes: String
  status: String!
}

input UpdateOrderItemInput {
  orderHeaderId: String
  productVariationId: String
  quantity: Float
  subtotal: Float
  currencyCode: String
  productName: String
  itemDiscounts: [CreateOrderItemDiscountInput!]
  id: String!
}

input CreateOrderItemDiscountInput {
  orderDetailId: String!
  promotionalDiscountId: String!
  requiredAmount: Float!
  discountPercentage: Float
  bonusQuantity: Float
}